git 프로젝트를 이용해서 다양한 코드들을 만들고 싶다. 
#1주차
1.git : git은 변경된 값의 변화를 인식하고 저장한다.  (버전 관리 도구)(두개의 파일 비교)
2. githup : githup은 git으로 하는 협업기능에 유용하다.  (git의 원격 저장소)(커뮤니티 기능)(원격 repository)
3. sourcetree : git을 쉽게 사용하기 위한 도구 
4. commit : 파일의 변경된 부분, 누가 썻는지, 시간은 언제 인지를 정보를 저장한다.(상태를 저장)
5. git 프로젝트를 만들면 '.git'파일이 생기면서 git이 그 폴더를 관리한다.
6. 원격 repo, 로컬repo : (GIthub의 다른 공간에 저장),(내 컴퓨터의 내부에 저장?)
7. 관계에는 Tracking : 로컬에서 원격으로 연결 , clone : 원격에서 로컬로 저장하기, push : 로컬에서 원격으로 넣어주기, pull : 원격에서 로컬로 가져오기
8. 1개의 원격에 많은 로컬이 데이터를 모으고 협업을 한다.
9. repo : git로 관리 되는 프로젝트
10. add,staging : commit에 반영할 파일을 설정하는 것
11. 버전관리 : 언제, 누가, 내용변화 정보를 순차적으로 관리

#2주차
1. 이슈을 만든다.(lssue) 만들어 어떤 작업을 할지 누가 할지
2. 각자 작업을 독립된 공간을 만들어서 작업한다.(Branch) 나무가지 처럼 각 작업에 뻗어나가 듯
3. 각자의 작업을 합친다. (marge) 프로젝트을 합치며 덥허 씨우게 된다.(리뷰하고 반영하면 좋다.)

이슈 붙이기(#이슈번호 )를 커밋 메시지 뒤에 붙여라.

체크아웃 : 작업할 브랜치를 선택을 말한다.

브랜치를 지우면 브랜치의 데이터는 사라진다.

충돌 수정 하면 원하는 내용으로 선택하여 남겨 수정하면 된다.~ 후 커밋 (거기에 새로운 내용 더하면 오류가 생겼을 떄 찾기 힘들어 진다.)
